# Generated by Django 5.2 on 2025-10-15 01:17

from django.db import migrations


def populate_categories_and_copy_data(apps, schema_editor):
    MenuItem = apps.get_model('restaurant', 'MenuItem')
    MenuCategory = apps.get_model('restaurant', 'MenuCategory')

    # Define a mapping for old category names to new category details
    # This should match the hardcoded values in the template and provide descriptions/icons
    category_data = {
        "coffee": {"name": "Coffee", "description": "Expertly crafted coffee drinks using premium beans from around the world.", "icon": "fas fa-mug-hot"},
        "drinks": {"name": "Drinks", "description": "Refreshing beverages, specialty cocktails and carefully curated selections", "icon": "fas fa-glass-martini-alt"},
        "breakfast": {"name": "Breakfast", "description": "Start your day with our delicious breakfast menu.", "icon": "fas fa-coffee"},
        "pizza": {"name": "Pizza", "description": "Handmade pizzas with premium toppings", "icon": "fas fa-pizza-slice"},
        "american": {"name": "American", "description": "Classic American cuisine prepared with our chef's special touch", "icon": "fas fa-hamburger"},
        "indian": {"name": "Indian", "description": "Traditional Indian dishes filled with aromatic spices and authentic cooking methods", "icon": "fas fa-pepper-hot"},
        "mexican": {"name": "Mexican", "description": "Bold and flavorful Mexican cuisine using fresh ingredients and authentic recipes", "icon": "fas fa-pepper-hot"},
        "local_food": {"name": "Local Specialties", "description": "Regional specialties showcasing unique local ingredients and traditions", "icon": "fas fa-utensils"},
        "soup_salad_mediterranean": {"name": "Soup & Salad", "description": "Fresh salads and Mediterranean favorites packed with healthy goodness", "icon": "fas fa-leaf"},
        "dessert": {"name": "Desserts", "description": "Sweet treats and delicate desserts made with high-quality ingredients", "icon": "fas fa-ice-cream"},
    }

    # Create MenuCategory objects
    for slug, data in category_data.items():
        MenuCategory.objects.get_or_create(
            slug=slug,
            defaults={
                'name': data['name'],
                'description': data['description'],
                'icon': data['icon']
            }
        )

    # Copy data from MenuItem.category to MenuItem.category_temp
    for item in MenuItem.objects.all():
        item.category_temp = item.category
        item.save()

def reverse_populate_categories_and_copy_data(apps, schema_editor):
    MenuCategory = apps.get_model('restaurant', 'MenuCategory')
    MenuCategory.objects.all().delete()
    MenuItem = apps.get_model('restaurant', 'MenuItem')
    for item in MenuItem.objects.all():
        item.category_temp = None
        item.save()


class Migration(migrations.Migration):

    dependencies = [
        ('restaurant', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_categories_and_copy_data, reverse_populate_categories_and_copy_data),
    ]
